.cardApp {
  /* 相对定位 */
  position: relative;
  width: 100%;
  height: 100%;
  /* 圆角 */
  border-radius: 30px;
  /* 鼠标移到元素上光标变为小手 */
  cursor: pointer;
  background-color: #fff;
  /* 盒子阴影 */
  box-shadow: 1px 1px 20px rgba(0, 0, 0, 0.1);
  /* 给父元素添加一个3D盒子属性，那么子元素就到背面了，这个属性是加到父元素上的，但是影响的是子元素 */
  transform-style: preserve-3d;
  /* 给卡片添加默认动画 */
  // animation: rotate-reverse 1.2s cubic-bezier(0.66, -0.47, 0.33, 1.5) forwards;
}

/* 设置鼠标移入卡片时执行动画 */

.cardEntery{
   animation: rotate 1.2s cubic-bezier(0.66, -0.47, 0.33, 1.5) forwards;
}
.cardLeve{
  animation: rotate-reverse 1.2s cubic-bezier(0.66, -0.47, 0.33, 1.5) forwards;
}
.front,
.back {
  /* 绝对定位 子元素是绝对定位，父元素需要相对定位 */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* 弹性布局，让元素垂直陈列 */
  display: flex;
  flex-direction: column;
  /* 现在子元素垂直陈列，那么就是让子元素水平居中 */
  align-items: center;
  /* 平均分配高度给每一个子元素 */
  justify-content: space-around;
  font-size: 20px;
  background-color: #fff;
  border-radius: 30px;
  /* 隐藏旋转div元素的背面 */
  backface-visibility: hidden;
  background-image: url('../../../../../assets/images/1.png');
  background-size: 100% 100%;
}

.back {
  /* 因为背面卡片要到后面去，所以我们给背面卡片加一个沿Y轴旋转180度的属性，这里我们可以看到旋转了，但是没到后面去，原因就是父盒子现在不是3D盒子，而是一个2D盒子，所以我们需要让父元素变成一个3D盒子（哈哈，有点啰嗦了） */
  transform: rotateY(180deg);
  color: white;
  font-size: 30px;
  background-color: #D2C6AE;
  background-image: url('../../../../../assets/images/3.png');
  background-size: 100% 100%;
  padding: 20px;
  text-align: center;
}

.clock {
  display: flex;
}

.clock span{
  width: 100%;
  font-size: 50px;
  color: #fff;
  text-align: center;
  /* 设置字体 */
  font-family: "Kanit";
  font-weight: 900;
  /* 文字阴影 实现3D效果 */
  text-shadow: 0 1px 0 #deafaf,
    0 2px 0 #bda8a8,
    0 3px 0 #d8a1a1,
    0 4px 0 #d59999,
    0 5px 0 #d29292,
    0 6px 0 #cf8b8b,
    0 7px 0 #cc8484,
    0 8px 0 #c97d7d,
    0 0 5px rgba(231, 156, 156, 0.05),
    0 -1px 3px rgba(231, 156, 156, 0.2),
    0 9px 9px rgba(231, 156, 156, 0.3),
    0 12px 12px rgba(231, 156, 156, 0.3),
    0 15px 15px rgba(231, 156, 156, 0.3);
}
.button{
  width: 100%;
  height:100%;
  display: flex;
  align-items: center;
  justify-content: center;
  .ant-btn-lg{
    width: 80%;
  }
}


/* 接下来我们定义一下旋转动画 */
@keyframes rotate {
  0% {
    transform: rotateY(0deg);
  }

  100% {
    transform: rotateY(180deg);
  }
}

@keyframes rotate-reverse {
  0% {
    transform: rotateY(180deg);
  }

  100% {
    transform: rotateY(0deg);
  }
}
